CHR =[]
for i in range(0, 200):
  CHR.append(str(i))
REP = []
for i in range(1, 101):
  REP.append("A"+str(i))
CONFIG = ["C1"]
HERITABILITY = ["h2-0"]
PHENO = ["PS", "LAT", "DIAG"]
TEST = ["PS", "LAT"]
ENV = ["env-0.0", "env-0.5", "env-1.0", "env-1.5", "env-2.0", "env-2.5", "env-3.0"]
#ENV = ["env-0.0", "env-1.0"]
#PC = [10, 50, 100, 200, 300,500,1000]
PC = [10]
SS_TEST = 20 # Number of inidividuals per deme
SIZE = SS_TEST * 36
GWAS_SIZE = 60 * 36
PVALUE_THRESHOLD = 1
NUM_RESAMPLE = 1000


wildcard_constraints:
    rep="[A-Z]\d+",
    config="C1",
    h2="h2-[0-1]",
    pheno="[A-Z]*",
    env="env-[0-9]*.[0-9]*",
    test="[A-Z]*",
    pc="[0-9]*"

def get_params(x):
  out = x.split("-")[1]
  return out

def get_pc_num(x):
  end = str(int(x) + 4)
  start = str(5)
  out = start + "-" + end
  if int(x) == 1:
     out = str(5)
  #print(out)
  return out

def get_pc_list(x):
  A = [str(i) for i in x]
  print(A)
  out = "-".join(A)
  print(out)
  return out

def get_seed_msprime(rep):
  out = int(''.join(list(rep)[1::])) * 1000
  return out


rule all:
    input:
        expand("output/Calculate_FGr/SimpleGrid/{rep}/{config}/genos-gwas.eigenvec",chr=CHR, rep=REP, config=CONFIG, h2=HERITABILITY, env=ENV, pheno=PHENO, test=TEST,pc=PC)


rule confounder_PCA_weights:
    input:
        vecs="output/Calculate_Tm/SimpleGrid/{rep}/{config}/gwas_pca.eigenvec",
        phenos="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.phenos.txt",
        pops="output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pop",
        gvalue="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.gvalue.sscore"
    output:
        "output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/pca_weights.txt"
    shell:
        """
        Rscript code/Simulate_Phenotypes/GWAS_confounder_weights.R {input.vecs} {input.pops} {input.gvalue} {output}
        """

# Simluate Genotypes

rule simulate_genotypes_SimpleGrid:
    output:
        expand("output/Simulate_Genotypes/SimpleGrid/{{rep}}/genos_{chr}.vcf", chr=CHR),
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pop"
    params:
      chr_num = len(CHR),
      seed = lambda wildcards: get_seed_msprime(wildcards.rep)
    shell:
        "python code/Simulate_Genotypes/generate_genotypes_SimpleGrid.py \
	       --outpre output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/genos \
	       --chr {params.chr_num} \
	       --sample_size 80 \
	       --length 10000 \
	       --Ne 1000 \
	       --mu 1e-07 \
	       --rho 1e-07 \
	       --tmove -9 \
	       --migrate 0.01 \
	       --seed {params.seed}"

rule format_VCF:
    input:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/genos_{chr}.vcf"
    output:
        gz="output/Simulate_Genotypes/SimpleGrid/{rep}/genos_{chr}.ids.vcf.gz"
    shell:
        """
	      head -n6 {input} > output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/header_{wildcards.chr}.txt
	            cat output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/header_{wildcards.chr}.txt <(cat output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/genos_{wildcards.chr}.vcf | awk -v OFS="\t" 'NR>6 {{$3=$1"_"$2"_A_T";$4="A"; $5="T"; print ;}}') | bgzip > {output.gz}
			        rm output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/header_{wildcards.chr}.txt
			        rm {input}
				      """

rule concat_vcfs:
    input:
        expand("output/Simulate_Genotypes/SimpleGrid/{{rep}}/genos_{chr}.ids.vcf.gz", chr=CHR)
    output:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/genos.ids.vcf.gz"
    shell:
        """
        bcftools concat {input} -o output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/temp.vcf.gz -O z
        bcftools annotate --rename-chrs code/Simulate_Genotypes/convert_chr.txt output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/temp.vcf.gz -o {output} -O z
        rm output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/temp.vcf.gz
        rm {input}
        """

rule convert_vcf_to_plink:
    input:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/genos.ids.vcf.gz"
    output:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/genos.psam",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pgen",
      	"output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pvar"
    shell:
        """
        plink2 \
        --double-id \
        --make-pgen \
        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/genos \
        --vcf {input}
        rm {input}
        """

rule create_panels_SimpleGrid:
    input:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pop"
    output:
        gwas="output/Simulate_Genotypes/SimpleGrid/{rep}/C1/ids.gwas",
	      test="output/Simulate_Genotypes/SimpleGrid/{rep}/C1/ids.test"
    params:
        ss_test = SS_TEST
    shell:
        "Rscript code/Simulate_Genotypes/split_gwas-test_SimpleGrid.R {params.ss_test} {input} {output.gwas} {output.test}"

rule split_into_test_gwas:
    input:
        gwas="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/ids.gwas",
	      test="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/ids.test",
	      psam="output/Simulate_Genotypes/SimpleGrid/{rep}/genos.psam",
		    pvar="output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pvar",
			  pgen="output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pgen"
    output:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.psam",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.pgen",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.pvar",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.psam",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.pgen",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.pvar"
    shell:
        """
	      plink2 \
	            --keep {input.gwas} \
		          --make-pgen \
			        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas \
				      --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/genos \
				            --rm-dup exclude-all

        plink2 \
        --keep {input.test} \
        --make-pgen \
        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/genos \
	      --rm-dup exclude-all

	      rm {input.psam}
	      rm {input.pvar}
	      rm {input.pgen}
	            """

rule get_variant_freq:
    input:
          "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.psam",
	        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.pvar",
		      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.pgen"
    output:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.afreq",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.afreq"
    shell:
        """
        plink2 \
	      --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test \
	            --freq \
		          --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test

			        plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas \
        --freq \
        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas
        """

rule get_common_snp_list:
    input:
        test="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.afreq",
        gwas="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.afreq"
    output:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/common_snp_ids.txt"
    script:
        "code/Simulate_Genotypes/get_common_snp_list.R"

rule remake_panels_with_common_snps:
    input:
        common_id="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/common_snp_ids.txt",
	      test_psam="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.psam",
	            test_pvar="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.pvar",
		          test_pgen="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.pgen",
			        gwas_psam="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.psam",
				      gwas_pvar="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.pvar",
				      gwas_pgen="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.pgen"
    output:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.psam",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.pvar",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.pgen",
	      "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam",
		    "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pvar",
			  "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pgen",
			  "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.afreq",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.afreq"
    shell:
        """
        plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test \
        --extract {input.common_id} \
        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test_common \
	      --make-pgen

        plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas \
        --extract {input.common_id} \
        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
	      --make-pgen

	     plink2 \
	     --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
	     --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
		   --freq

        plink2 \
	      --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test_common \
	      --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test_common \
		    --freq

		    rm {input.test_psam}
		    rm {input.test_pvar}
		    rm {input.test_pgen}
		    rm {input.gwas_psam}
		    rm {input.gwas_pvar}
		    rm {input.gwas_pgen}
        """

rule aggregate_genotypes:
    input:
        genos=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/genos_{chr}.vcf", chr=CHR, rep=REP, config=CONFIG),
        gz_chr=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/genos_{chr}.ids.vcf.gz", chr=CHR, rep=REP),
        frq_test=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.afreq", rep=REP, config=CONFIG),
        frq_gwas=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.afreq", rep=REP, config=CONFIG),
        gz=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/genos.ids.vcf.gz", rep=REP),
	      gwas_pgen=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.pgen", rep=REP, config=CONFIG),
	      gwas_pvar=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.pvar", rep=REP, config=CONFIG),
	      gwas_psam=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas.psam", rep=REP, config=CONFIG),
	      test_pgen=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.pgen", rep=REP, config=CONFIG),
	      test_pvar=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.pvar", rep=REP, config=CONFIG),
	      test_psam=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test.psam", rep=REP, config=CONFIG),
	      pgen=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pgen", rep=REP, config=CONFIG),
	      pvar=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pvar", rep=REP, config=CONFIG),
	      psam=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/genos.psam", rep=REP, config=CONFIG),
	      keep=expand("output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam", rep=REP, config=CONFIG)
    output:
        expand("output/Simulate_Genotypes/SimpleGrid/{rep}/ff.txt", rep=REP)
    shell:
        """
	 touch {output}
	 touch {input.keep}
	 rm {input.genos}
	 rm {input.frq_test}
	 rm {input.frq_gwas}
	 rm {input.gz}
	 rm {input.gz_chr}
	 rm {input.gwas_pgen}
	 rm {input.gwas_pvar}
	 rm {input.gwas_psam}
	 rm {input.test_pgen}
	 rm {input.test_pvar}
	 rm {input.test_psam}
	 rm {input.pgen}
	 rm {input.pvar}
	 rm {input.psam}
	 """

# Simluate Phenotypes

rule draw_effect_sizes:
    input:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.afreq"
    output:
        "output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.effects.txt"
    params:
        her = lambda wildcards: get_params(wildcards.h2)
    shell:
        "Rscript code/Simulate_Phenotypes/draw_effect_sizes.R {input} {output} {params.her} 0.4"

rule generate_genetic_values:
    input:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pvar",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pgen",
        "output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.effects.txt"
    output:
        "output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.gvalue.sscore"
    shell:
        """
        plink2 \
	      --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
	      --out output/Simulate_Phenotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/genos-gwas_common.gvalue \
		    --score output/Simulate_Phenotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/genos-gwas_common.effects.txt cols=dosagesum,scoresums
		    """

rule simulate_phenotype_SimpleGrid:
    input:
        gvalues="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.gvalue.sscore",
        pops="output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pop"
    output:
        "output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.phenos.txt"
    params:
        her = lambda wildcards: get_params(wildcards.h2),
        en = lambda wildcards: get_params(wildcards.env)
    shell:
        "Rscript code/Simulate_Phenotypes/simulate_phenotypes_SimpleGrid.R {input.gvalues} {input.pops} {output} {params.her} {params.en} {wildcards.pheno}"


# Project Test vector

rule make_test_vector:
    input:
        pops="output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pop",
        fam="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.psam"
    output:
        "output/Calculate_FGr/SimpleGrid/{rep}/{config}/{test}/Tvec.txt"
    shell:
        "Rscript code/Calculate_FGr/SimpleGrid_make_tvec.R {input.pops} {input.fam} {wildcards.test} {output}"


rule compute_FGr:
    input:
        test="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.psam",
        gwas="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pgen",
        tvec="output/Calculate_FGr/SimpleGrid/{rep}/{config}/{test}/Tvec.txt"
    output:
        "output/Calculate_FGr/SimpleGrid/{rep}/{config}/{test}/Tm.txt"
    shell:
        """
        Rscript code/Calculate_FGr/calc_FGr.R output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test_common output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common {input.tvec} output/Calculate_FGr/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.test}/
 		    """

# GWAS PCA

rule GWAS_PCA:
    input:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pgen",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pvar",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam"
    params:
        n_minus_1 = int(GWAS_SIZE)-1,
    output:
        "output/Calculate_FGr/SimpleGrid/{rep}/{config}/genos-gwas.eigenvec",
        "output/Calculate_FGr/SimpleGrid/{rep}/{config}/genos-gwas.eigenval",
    shell:
        """
        plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
        --pca {params.n_minus_1} \
        --out output/Calculate_FGr/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas
        """

# Run GWAS

rule format_covars:
    input:
      pops="output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pop",
      fam="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam",
      Tm="output/Calculate_FGr/SimpleGrid/{rep}/{config}/{test}/Tm.txt",
      pc="output/Calculate_FGr/SimpleGrid/{rep}/{config}/genos-gwas.eigenvec"
    output:
      "output/Calculate_FGr/SimpleGrid/{rep}/{config}/{pheno}/{test}/Tm-ID_covars.txt"
    shell:
      "Rscript code/Calculate_Tm/SimpleGrid_format_ID_covars.R {input.pops} {input.Tm} {input.fam} {wildcards.test} {output} {input.pc}"


rule gwas_no_correction:
    input:
        genos="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam",
        freq="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.afreq",
        pheno="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.phenos.txt"
    output:
        "output/Run_GWAS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.pheno_strat.glm.linear"
    shell:
        "plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
        --read-freq {input.freq} \
        --glm allow-no-covars \
        --pheno {input.pheno} \
        --pheno-name pheno_strat \
        --out output/Run_GWAS/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/{wildcards.test}/genos-gwas_common"

rule gwas_Tm:
    input:
        genos="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam",
        freq="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.afreq",
        pheno="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.phenos.txt",
        Tm="output/Calculate_FGr/SimpleGrid/{rep}/{config}/{pheno}/{test}/Tm-ID_covars.txt"
    output:
        "output/Run_GWAS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.pheno_strat.glm.linear"
    shell:
        "plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
        --read-freq {input.freq} \
        --glm hide-covar \
        --covar {input.Tm} \
        --covar-col-nums 3 \
        --pheno {input.pheno} \
        --pheno-name pheno_strat \
        --out output/Run_GWAS/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/{wildcards.test}/genos-gwas_common-Tm"

rule gwas_PopID:
    input:
        genos="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam",
        freq="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.afreq",
        pheno="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.phenos.txt",
        Tm="output/Calculate_FGr/SimpleGrid/{rep}/{config}/{pheno}/{test}/Tm-ID_covars.txt"
    output:
        "output/Run_GWAS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.pheno_strat.glm.linear"
    shell:
        "plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
        --read-freq {input.freq} \
        --glm hide-covar \
        --covar {input.Tm} \
        --covar-col-nums 4 \
        --pheno {input.pheno} \
        --pheno-name pheno_strat \
        --out output/Run_GWAS/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/{wildcards.test}/genos-gwas_common-ID"

rule gwas_PC:
    input:
        genos="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam",
        freq="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.afreq",
        pheno="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.phenos.txt",
        Tm="output/Calculate_FGr/SimpleGrid/{rep}/{config}/{pheno}/{test}/Tm-ID_covars.txt"
    output:
        "output/Run_GWAS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-{pc}.pheno_strat.glm.linear"
    params:
       pc_num = lambda wildcards: get_pc_num(wildcards.pc)
    shell:
        "plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
        --read-freq {input.freq} \
        --glm hide-covar \
        --covar {input.Tm} \
        --covar-col-nums {params.pc_num} \
        --pheno {input.pheno} \
        --pheno-name pheno_strat \
        --out output/Run_GWAS/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/{wildcards.test}/genos-gwas_common-{wildcards.pc}"



# Ascertain SNPs

rule pick_SNPS:
    input:
      causal_effect="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.effects.txt",
      gwas_u="output/Run_GWAS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.pheno_strat.glm.linear",
      gwas_Tm="output/Run_GWAS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.pheno_strat.glm.linear",
      gwas_ID="output/Run_GWAS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.pheno_strat.glm.linear",
      gwas_PC=expand("output/Run_GWAS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.pheno_strat.glm.linear",pc=PC)
    output:
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.c.betas",
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.c.betas",
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.c.betas",
      expand("output/PRS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.c.betas", pc=PC),
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.nc.betas",
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.nc.betas",
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.nc.betas",
      expand("output/PRS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.nc.betas", pc=PC)
    params:
      pc_list = get_pc_list(PC)
    shell:
      """
      Rscript code/PRS/clump.R {input.causal_effect} output/Run_GWAS/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/{wildcards.test}/genos-gwas_common output/PRS/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/{wildcards.test}/genos-gwas_common {params.pc_list}
      rm {input.gwas_u} {input.gwas_Tm} {input.gwas_ID} {input.gwas_PC}
      """

# Compute joint effect sizes

rule joint_effects:
    input:
      uc="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.c.betas",
      Tmc="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.c.betas",
      IDc="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.c.betas",
      PCc =expand("output/PRS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.c.betas", pc=PC),
      unc="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.nc.betas",
      Tmnc="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.nc.betas",
      IDnc="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.nc.betas",
      PCnc=expand("output/PRS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.nc.betas", pc=PC),
      pheno="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.phenos.txt",
      Tm="output/Calculate_FGr/SimpleGrid/{rep}/{config}/{pheno}/{test}/Tm-ID_covars.txt"
    output:
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.c.betas.joint",
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.c.betas.joint",
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.c.betas.joint",
      expand("output/PRS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.c.betas.joint", pc=PC),
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.nc.betas.joint",
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.nc.betas.joint",
      "output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.nc.betas.joint",
      expand("output/PRS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.nc.betas.joint", pc=PC)
    params:
      pc_list = get_pc_list(PC)
    shell:
      """
      Rscript code/PRS/compute_joint_effect_sizes.R output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common output/PRS/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/{wildcards.test}/genos-gwas_common {input.pheno} {input.Tm} {params.pc_list}
      rm {input.uc} {input.Tmc} {input.IDc} {input.unc} {input.Tmnc} {input.IDnc} {input.PCc}  {input.PCnc}
      """

# Do polygenic adaptation test

rule Calc_Qx:
  input:
    g1="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.c.betas.joint",
    g2="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.c.betas.joint",
    g3="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.c.betas.joint",
    g4=expand("output/PRS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.c.betas.joint", pc=PC),
    g5="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common.nc.betas.joint",
    g6="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-Tm.nc.betas.joint",
    g7="output/PRS/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/genos-gwas_common-ID.nc.betas.joint",
    g8=expand("output/PRS/SimpleGrid/{{rep}}/{{config}}/{{h2}}/{{pheno}}/{{env}}/{{test}}/genos-gwas_common-{pc}.nc.betas.joint", pc=PC),
    genos="output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.psam",
    Tvec="output/Calculate_FGr/SimpleGrid/{rep}/{config}/{test}/Tvec.txt",
    pops="output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pop",
    es="output/Simulate_Phenotypes/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/genos-gwas_common.effects.txt"
  output:
    qx="output/PGA_test/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/Qx.txt",
    pgs="output/PGA_test/SimpleGrid/{rep}/{config}/{h2}/{pheno}/{env}/{test}/PGS.txt"
  params:
    num=NUM_RESAMPLE,
    pc_list = get_pc_list(PC)
  shell:
    """
    Rscript code/PGA_test/calc_Qx_SimpleGrid.R output/PRS/SimpleGrid/{wildcards.rep}/{wildcards.config}/{wildcards.h2}/{wildcards.pheno}/{wildcards.env}/{wildcards.test}/genos-gwas_common output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test_common {input.Tvec} {input.pops} {params.num} {output.qx} {input.es} {params.pc_list} {output.pgs}
    rm {input.g1} {input.g2} {input.g3} {input.g4} {input.g5} {input.g6} {input.g7} {input.g8}
    """


# Rule to calculate Fst across demes in GWAS panel

rule Fst_GWAS:
    input:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pgen",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.pvar",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common.psam",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/genos.pop"
    output:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-gwas_common_fst.fst"
    shell:
        """
        plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
        --maf 0.05 \
        --indep-pairwise 100 10 0.1 \
        --write-snplist \
        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common.cmpruned

        plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common \
        --extract output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common.cmpruned.prune.in \
        --make-bed \
        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common.cmpruned.b

        plink --bfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common.cmpruned.b\
        --fst \
        --within output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/genos.pop \
        --out output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common_fst

        rm output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-gwas_common.cmpruned*
        """

rule Test_PCA:
    input:
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.pgen",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.pvar",
        "output/Simulate_Genotypes/SimpleGrid/{rep}/{config}/genos-test_common.psam"
    params:
        n_minus_1 = int(SIZE)-1
    output:
        "output/Calculate_Tm/SimpleGrid/{rep}/{config}/pca.eigenvec",
        "output/Calculate_Tm/SimpleGrid/{rep}/{config}/pca.eigenval"
    shell:
        """
        plink2 \
        --pfile output/Simulate_Genotypes/SimpleGrid/{wildcards.rep}/{wildcards.config}/genos-test_common \
       --pca {params.n_minus_1} \
       --out output/Calculate_Tm/SimpleGrid/{wildcards.rep}/{wildcards.config}/pca
        """

rule GWAS_PCA_weights:
    input:
        vecs="output/Calculate_Tm/SimpleGrid/{rep}/{config}/gwas_pca.eigenvec",
        Tm="output/Calculate_Tm/SimpleGrid/{rep}/{config}/{test}/Tm.txt"
    output:
        "output/Calculate_Tm/SimpleGrid/{rep}/{config}/{test}/gwas_pca_weights.txt"
    shell:
        """
        Rscript code/Calculate_Tm/GWAS_PC_weights.R {input.vecs} {input.Tm} {output}
        """
